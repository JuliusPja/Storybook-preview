"use strict";(self.webpackChunkui_web_components=self.webpackChunkui_web_components||[]).push([[602],{"./src/components/MyButton.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>MyButton_stories});class MyButton extends HTMLElement{constructor(){super();const shadow=this.attachShadow({mode:"open"}),button=document.createElement("button");button.textContent=this.getAttribute("label")||"Click me",shadow.appendChild(button)}}customElements.define("my-button",MyButton);const MyButton_stories={title:"Components/MyButton",component:"my-button",tags:["autodocs"],argTypes:{label:{control:"text"}}},Default={args:{label:"Click me"},render:({label})=>`<my-button label="${label}"></my-button>`},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Click me'\n  },\n  render: ({\n    label\n  }) => `<my-button label=\"${label}\"></my-button>`\n}",...Default.parameters?.docs?.source}}}}}]);